
class User {
	 private int userid;   
	  private String name;
	   String email;
	   String password;
	// i am using get funtion then only , i can access this private access specifier
	  
	  public String getEmail() {
	  	return email ;
	  }
	  public String getPassword() {
	  	return password ;
	  }
	public  User(int id , String name, String email, String password ) {
	     this.userid=userid;
		this.name=name;
		this.email=email;
		this.password=password ;
	}
}
class Flight {
	int id;
	String destination;
	int nooftickets;
	String price;
	
	public Flight(int id,String destination,int nooftickets,String price ) {
		this.id= id;
		this.destination= destination;
		this.nooftickets= nooftickets;
		this.price= price;
	}
	
}

class History{
	int bookingid;
	int flightid;
	int userid;
	String Class;
	int totalprice ;
	
	public History(int bookingid,int flightid,int userid,String Class,int totalprice ) {
		this.bookingid=   bookingid;
		this.flightid= flightid;
	     this.userid=userid;
		 this.Class=Class;
		 this.totalprice=  totalprice ;
		
	}
}
public class practice {
	List<User> users;
	List<Flight> flight;
	Stack<History> history;
	public practice() {
		this.users=new ArrayList<>();
		this.flight=new ArrayList<>();
		this.history=new Stack<>();
	}
	  public User validateLogin(String email, String password, List<User> users) {
	        for (User user : users) {
	            if (user.email.equals(email) && user.password.equals(password)) {
	                return user;
	            }
	        }
	        return null;
	    }

	public void adduser(User user) {
		   users.add(user);
	}
	public void addflight(Flight flight1) {
		flight.add(flight1);
	}
	public void addhistory(History history1) {
		history.push(history1);
	}
	public void removehistory(History history1) {
		history.remove(0);
	}
	 public boolean cancelBooking(int bookingId) {
         for ( History hist:history) {
             if (hist.bookingid == bookingId) {
                 // Remove the booking from the bookings list
                 history.remove(hist);
                 // Optionally, update the booking history to reflect the cancellation
                 return true; // Return true to indicate successful cancellation
                 
             }
         }
         // If no booking with the specified bookingId is found, return false
         return false;
     }
	 
//	 public  User validateLogin(String email, String password) {
//	        for (User user : users) {
//	            if (user.email.equals(email) && user.password.equals(password)) {
//	                return user;
//	            }
//	        }
//	        return null;
//	    }
	 public void run() {
		    Scanner scanner = new Scanner(System.in);
		    boolean isRunning = true;
             int tickets=50 ;  
		    while (isRunning) {
		        System.out.println("Welcome to the Mobile Ticket Booking App");
		        System.out.println("1.Avaialable Flight Details");
		        System.out.println("2.For Booking ");
		        System.out.println("3. Payment");
		        System.out.println("4. History");
		        System.out.println("5. Cancellation");
		        System.out.println("6. Exit");
		        System.out.print("Enter your choice: ");
		        int choice = scanner.nextInt();
		        switch (choice) {
		        case 1 : 
		        	  System.out.println("-------------------------");
		        	 System.out.println("Available Flight Details");	
		        for(Flight flight1:flight) {
		        	 System.out.println("1.Flight id:" + flight1.id);
		        	 System.out.println("2.Destination:" + flight1.destination);
		        	 System.out.println("3.No of tickets:" + flight1.nooftickets);
		        	 System.out.println("4.Price:" + flight1.price);
		        	  System.out.println("-------------------------");
		        }
		        break;
		        case 2:
		        	 System.out.println("2. Booking ");
		        	 System.out.println("Enter the flightid:  ");
		        int flightid=scanner.nextInt();
		        System.out.println("Userid: ");
		        int userid=scanner.nextInt();
		        System.out.println("Nooftickets: ");
		        int nooftickets=scanner.nextInt();
		        System.out.println("Enter the class: ");
		        String prefer=scanner.next();
		        
		        if( flightid == 1) {
		        	int sum1=nooftickets *20000;
		        	System.out.println("Amount to be paid: " + sum1);
		        	 History book1=new History(history.size()+1,flightid,userid,prefer,sum1);
			            addhistory(book1);
		        } else {
		        
		        int sum=nooftickets *10000;
		        System.out.println("Amount to be paid: " + sum);
//		        Booking newbook=new Booking(booking.size()+1,userid,nooftickets,flightid,prefer,sum);
//		        addbooking(newbook);
		        
		        
		       // Flight flight =new Flight(userid,nooftickets,prefer);
		        
		       
		            History book2=new History(history.size()+1,flightid,userid,prefer,sum);
		            addhistory(book2);
		        }
		        
		        
		        break ;
		        case 3:
		            System.out.println("Payment Method");
		            String paymentmethod = scanner.next();
		            System.out.println("Enter the flightID");
		            int flightid1 = scanner.nextInt(); 
		            System.out.println("Enter the userID");
		            int userID = scanner.nextInt(); 
		            System.out.println("Enter the amount");
		            int amount = scanner.nextInt();
		            
		            // Iterate through the bookings and check if the amount matches for the same flight ID
		            boolean paymentSuccessful = false;
		            for(History history1:history) {
		                if (  history1.totalprice == amount) {
		                    paymentSuccessful = true;
		                    break;
		                }
		            }
		            
		            if (paymentSuccessful) {
		                System.out.println("Payment Successfully");
		            } else {
		                System.out.println("Payment Failed");
		            }
		            break;
		        case 4 :
		        	     System.out.println("-------------------------");
		        	 System.out.println("History");
		            
		            for(History history1:history) {
		            	System.out.println("Bookingid:" + history1.bookingid);
		            	 System.out.println("Userid:" + history1.userid);	
		            	 System.out.println("Flightid:" + history1.flightid);
		            	 System.out.println("Class:" + history1.Class );		            	 
		            	 System.out.println("Totalprice:" + history1.totalprice);
		            	// System.out.println("Total price :" + history1);
		            	  System.out.println("-------------------------");
	            }
		            break;
		        
		        case 5 :
		        	 System.out.println(" Cancellation");
		        	 
		        	 System.out.println(" Enter the bookingid");
		            int canceluserid=scanner.nextInt();
		            if(cancelBooking(canceluserid) == true) {  
		            	 System.out.println("Cancel sucessfully , Amount will be refund in 24 hours ");	
		            } else {
		            	 System.out.println("Invalid details ,Try again");
		            }
		        
		            break;
		            
		         
		            case 6:
		                
		                isRunning = false;
		                break;
		            default:
		                System.out.println("Invalid choice. Please try again.");
		                break;
		        }
		    }

		    System.out.println("Thank you for using the Mobile Ticket Booking App!");
		}
 
    public static void main(String[] args) {
    	practice app= new practice();
    	 User user1 = new User(1, "John", "john@example.com", "password123");
         User user2 = new User(2, "Admin", "admin@example.com", "admin123");
         app.adduser(user1);        
          app.adduser(user2);
          //User loggedInUser = app.validateLogin("john@example.com", "password123", app.users);
         

          
    	
         Flight flight1=new Flight(1,"delhi",25,"20000 perticket");
         Flight flight2=new Flight(2,"chennai",25,"10000 perticket");
         app.addflight(flight1);
          app.addflight(flight2);       
    	app.run();
      
    }
}

